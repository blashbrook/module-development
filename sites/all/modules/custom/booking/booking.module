<?php
// $Id$

/**
 * @file
 * Examples of using the User API.
 */


/**
 * Implements hook_form_alter().
 *
 * @TODO: Add a permissions setting for controlling access to this field.
 * @TODO: Convert field type to prepopulated select list.
 */
function booking_form_alter(&$form, &$form_submit, $form_id) {
    global $user;

  // Add checkbox to allow users to select whether to store search history.
  if (isset($form['#user_category']) && $form['#user_category'] == 'account') { // Added isset after recording.
    $account = $form['#user'];
    $form['library'] = array(
        '#type' => 'fieldset',
        '#title' => t('Search history'),
        '#weight' => 4,
    );
    $form['library']['assigned_library'] = array(
        '#type' => 'textfield',
        '#title' => t('Assigned Library'),
        '#description' => t('Would you like to store search history and display a list on your user page?'),
        '#default_value' => isset($account->data['assigned_library']) ? $account->data['assigned_library'] : '',
        '#disabled' => $user->uid == '1' ? FALSE : TRUE, //Using temporary permissions controller.
    );
  }
}


/**
 * A registered submission function for the search form.
 */
function booking_save_search_submit($form, &$form_submit) {
  global $user;

  // Make sure we're not editing the $user variable directly.
  $account = $user;


  // If the user hasn't chosen to store history, return.
  if (!isset($account->data['assigned_library']) || $account->data['assigned_library'] != 1) {
    return;
  }

  // Store the search history.
  $library = isset($account->data['library']) ? $account->data['library'] : array();
  $edit['data']['library'] = $library;
  user_save($account, $edit);
  return;
}


/**
 * Implements hook_user_presave().
 *
 * Saves user setting to store search history.
 */
function booking_user_presave(&$edit, $account, $category) {

  // Save option to store search history.
  if (isset($edit['assigned_library'])) {
    $edit['data']['assigned_library'] = $edit['assigned_library'];
  }

  return;
}
global $user;
$account = $user;
drupal_set_message($account->data['assigned_library']);

