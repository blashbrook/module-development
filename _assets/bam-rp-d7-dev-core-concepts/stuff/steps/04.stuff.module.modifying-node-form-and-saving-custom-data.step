<?php
// $Id$

/**
 * @file
 * Demonstrate how to load, view and modify nodes with the Node API.
 *
 * In this file, we're loading and modifying multiple nodes, then saving them.
 */


/**
 * Implements hook_menu().
 */
function stuff_menu() {
  $items['stuff'] = array(
    'title' => 'Node API examples',
    'page callback' => 'stuff_examples_page',
    'description' => 'Examples of using the Node API.',
    'access callback' => TRUE,
  );
  return $items;
}


/**
 * Menu callback; Examples of using the Node API.
 */
function stuff_examples_page() {

  // Example 1: Loading a single node and displaying it in full and teaser mode.
  if ($node = node_load(50)) {
    $build['node_display'] = node_view($node);
    $build['teaser_title'] = array(
      '#type' => 'markup',
      '#markup' => '<h3>Teaser mode</h3>',
    );
    $build['node_teaser'] = node_view($node, 'teaser');
  }


  // Example 2: Loading multiple nodes.
  $build = array();
  if ($nodes = node_load_multiple(array(50, 49, 48))) {
    $build['nodes'] = node_view_multiple($nodes, 'teaser');
  }

  return $build;
}


/**
 * Implements hook_form_alter().
 *
 * Adding an autocomplete user input to the node form.
 */
function stuff_form_alter(&$form, $form_state) {
  if (!empty($form['#node_edit_form'])) {
    $form['stuff_backup_user'] = array(
      '#type' => 'textfield',
      '#title' => t('Backup user'),
      '#default_value' => isset($form['#node']->stuff_backup_user) ? $form['#node']->stuff_backup_user : '',
      '#autocomplete_path' => 'user/autocomplete',
      '#size' => '12',
      '#maxlength' => '60',
      '#description' => t('Please specifiy a user that can modify your content should you meet an untimely demise.'),
    );
  }
}


/**
 * Implements hook_node_insert().
 *
 * Add backup user data when the node is saved.
 *
 * For more info, see:
 * http://api.drupal.org/api/drupal/modules--node--node.api.php/function/hook_node_insert/7
 */
function stuff_node_insert($node) {
  if (isset($node->stuff_backup_user)) {
    db_insert('stuff_backup')
      ->fields(array(
        'nid' => $node->nid,
        'username' => $node->stuff_backup_user))
      ->execute();
  }

  // Set a message so we know the update ran.
  drupal_set_message(t('You have set @username as the backup user for this node.', array('@username' => $node->stuff_backup_user)));
}


/**
 * Implements hook_node_update().
 *
 * Save the backup user data when the node is saved. Needs to make sure we take into account
 * nodes that existed before our module was installed.
 *
 * For more info, see:
 * http://api.drupal.org/api/drupal/modules--node--node.api.php/function/hook_node_update/7
 *
 */
function stuff_node_update($node) {

  // If there is already a record, update it.
  if (db_query('SELECT nid FROM {stuff_backup} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField()) {
    $num_updated = db_update('stuff_backup')
    ->fields(array(
        'nid' => $node->nid,
        'username' => $node->stuff_backup_user,
    ))
    ->condition('nid', $node->nid)
    ->execute();

    // Set a message so we know the update ran.
    drupal_set_message(t('You have updated the node to use @username as the backup user for this node.', array('@username' => $node->stuff_backup_user)));
  }

  // Otherwise, insert a new one.
  else {
    stuff_node_insert($node);
  }
}


/**
 * Implements hook_node_delete().
 *
 * Make sure to delete our backup user data from the custom table.
 *
 * For more info, see:
 * http://api.drupal.org/api/drupal/modules--node--node.api.php/function/hook_node_delete/7
 */
function stuff_node_delete($node) {
  db_delete('stuff_backup')->condition('nid', $node->nid)->execute();
}